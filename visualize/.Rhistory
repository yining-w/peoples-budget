shape %>%group_by(commarea_name) %>% count()%>%
left_join(summary_comm %>%group_by(commarea_name) %>% count(), by = "commarea_name") %>% arrange(-desc(n.y))
ggsave("commmap.png")
summary_ward = read.csv("Peoples_Budget_user_summary_WARD.csv")
shape <- readOGR(dsn = ".", layer = "wards")
library(data.table)
shape = fortify(shape, region = "ward")
names(shape)[names(shape) == "id"] <- "ward"
shape$ward = tolower(shape$ward)
summary_ward$ward = tolower(summary_ward$ward)
library(data.table)
View(summary_comm)
shape <- readOGR(dsn = ".", layer = "commarea")
shape = fortify(shape, region = "community")
names(shape)[names(shape) == "id"] <- "commarea_name"
shape$commarea_name = tolower(shape$commarea_name)
summary_comm$CHI_COMM_AREA_NAME = tolower(summary_comm$CHI_COMM_AREA_NAME)
names(summary_comm)[names(summary_comm) == "CHI_COMM_AREA_NAME"] <- "commarea_name"
shape$commarea_name = tolower(shape$commarea_name)
summary_comm$CHI_COMM_AREA_NAME = tolower(summary_comm$CHI_COMM_AREA_NAME)
View(shape)
neighborhoods = unique(shape$commarea_name)
setkey(summary_comm, commarea_name)
View(summary_comm)
?setkey
as.data.table(summary_comm)
setkey(summary_comm, commarea_name)
as.data.table(summary_comm)
setkey(summary_comm, commarea_name)
summary_comm = as.data.table(summary_comm)
?setkey
summary_comm = as.data.table(summary_comm)
setkey(summary_comm, commarea_name)
summary_comm = summary_comm[CJ(neighborhoods)]
View(summary_comm)
summary_comm[is.na(summary_comm$count)] = 0
summary_comm[is.na(summary_comm$proportion)] = 0
#merge map info with peoples budget info
merged = summary_comm  %>% left_join(shape, by = "commarea_name")
ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = commarea_name, fill = count), color="black") +
scale_fill_gradientn(colors = c("grey", "palevioletred2", "maroon3", "maroon4")) +
coord_fixed() + theme_minimal() +
labs(
title = "Who filled out the People's Budget?",
subtitle = "Web Responses By Community Area",
caption = "People's Budget Chicago | peoplesbudgetchicago.com") +
theme(
text = element_text(color = "#22211d"))
ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = commarea_name, fill = count), color="black") +
scale_fill_gradientn(colors = c("grey", "palevioletred2", "maroon3", "maroon4")) +
coord_fixed() + theme_minimal() + theme_void()
ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = commarea_name, fill = count), color="black") +
scale_fill_gradientn(colors = c("white", "grey", "palevioletred2", "maroon3", "maroon4")) +
coord_fixed() + theme_minimal() + theme_void() +
labs(
title = "Who filled out the People's Budget?",
subtitle = "Web Responses By Community Area",
caption = "People's Budget Chicago | peoplesbudgetchicago.com") +
theme(text = element_text(color = "#22211d"))
ggsave("commmap.png")
title = "Who filled out the People's Budget?",
ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = commarea_name, fill = count), color="black") +
scale_fill_gradientn(colors = c("white", "grey", "palevioletred2", "maroon3", "maroon4")) +
coord_fixed() + theme_minimal() + theme_void() +
labs(
title = "Who filled out the People's Budget?",
subtitle = "Web Responses By Community Area",
caption = "People's Budget Chicago | peoplesbudgetchicago.com") +
theme(text = element_text(color = "#22211d"))
View(merged)
summary_comm = read.csv("Peoples_Budget_user_summary_COMMUNITY_AREA.csv")
shape <- readOGR(dsn = ".", layer = "commarea")
#zip_shape <- st_read("zipcodes.shp")
shape = fortify(shape, region = "community")
names(shape)[names(shape) == "id"] <- "commarea_name"
shape$commarea_name = tolower(shape$commarea_name)
summary_comm$CHI_COMM_AREA_NAME = tolower(summary_comm$CHI_COMM_AREA_NAME)
names(summary_comm)[names(summary_comm) == "CHI_COMM_AREA_NAME"] <- "commarea_name"
neighborhoods = unique(shape$commarea_name)
##add missing neighborhoods to data
summary_comm = as.data.table(summary_comm)
setkey(summary_comm, commarea_name)
summary_comm = summary_comm[CJ(neighborhoods)]
summary_comm[is.na(summary_comm$count)] = 0
summary_comm[is.na(summary_comm$proportion)] = 0
View(summary_comm)
summary_comm = read.csv("Peoples_Budget_user_summary_COMMUNITY_AREA.csv")
shape <- readOGR(dsn = ".", layer = "commarea")
shape = fortify(shape, region = "community")
names(shape)[names(shape) == "id"] <- "commarea_name"
shape$commarea_name = tolower(shape$commarea_name)
summary_comm$CHI_COMM_AREA_NAME = tolower(summary_comm$CHI_COMM_AREA_NAME)
names(summary_comm)[names(summary_comm) == "CHI_COMM_AREA_NAME"] <- "commarea_name"
neighborhoods = unique(shape$commarea_name)
##see what variables are missing from shape file
shape %>%group_by(commarea_name) %>% count()%>%
left_join(summary_comm %>%group_by(commarea_name) %>% count(), by = "commarea_name") %>% arrange(-desc(n.y))
##add missing neighborhoods to data
summary_comm = as.data.table(summary_comm)
setkey(summary_comm, commarea_name)
summary_comm = summary_comm[CJ(neighborhoods)]
summary_comm[is.na(summary_comm)] = 0
#merge map info with peoples budget info
merged = summary_comm  %>% left_join(shape, by = "commarea_name")
ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = commarea_name, fill = count), color="black") +
scale_fill_gradientn(colors = c("grey", "palevioletred2", "maroon3", "maroon4")) +
coord_fixed() + theme_minimal() + theme_void() +
labs(
title = "Who filled out the People's Budget?",
subtitle = "Web Responses By Community Area",
caption = "People's Budget Chicago | peoplesbudgetchicago.com") +
theme(text = element_text(color = "#22211d"))
ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = commarea_name, fill = count), color="black") +
scale_fill_gradientn(colors = c("white" ,"grey", "palevioletred2", "maroon3", "maroon4")) +
coord_fixed() + theme_minimal() + theme_void() +
labs(
title = "Who filled out the People's Budget?",
subtitle = "Web Responses By Community Area",
caption = "People's Budget Chicago | peoplesbudgetchicago.com") +
theme(text = element_text(color = "#22211d"))
ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = commarea_name, fill = count), color="black") +
scale_fill_gradientn(colors = c("white" ,"silver", "grey", "palevioletred2", "maroon3", "maroon4")) +
coord_fixed() + theme_minimal() + theme_void() +
labs(
title = "Who filled out the People's Budget?",
subtitle = "Web Responses By Community Area",
caption = "People's Budget Chicago | peoplesbudgetchicago.com") +
theme(text = element_text(color = "#22211d"))
ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = commarea_name, fill = count), color="black") +
scale_fill_gradientn(colors = c("white" ,"beige", "grey", "palevioletred2", "maroon3", "maroon4")) +
coord_fixed() + theme_minimal() + theme_void() +
labs(
title = "Who filled out the People's Budget?",
subtitle = "Web Responses By Community Area",
caption = "People's Budget Chicago | peoplesbudgetchicago.com") +
theme(text = element_text(color = "#22211d"))
ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = commarea_name, fill = count), color="black") +
scale_fill_gradientn(colors = c("grey", "palevioletred2", "maroon3", "maroon4")) +
coord_fixed() + theme_minimal() + theme_void() +
labs(
title = "Who filled out the People's Budget?",
subtitle = "Web Responses By Community Area",
caption = "People's Budget Chicago | peoplesbudgetchicago.com") +
theme(text = element_text(color = "#22211d"))
ggsave("commmap.png")
View(summary_ward)
shape$ward = tolower(shape$Ward)
summary_ward = read.csv("Peoples_Budget_user_summary_WARD.csv")
shape <- readOGR(dsn = ".", layer = "wards")
shape = fortify(shape, region = "ward")
names(shape)[names(shape) == "id"] <- "ward"
shape$ward = tolower(shape$Ward)
View(shape)
summary_ward$ward = tolower(summary_ward$Ward)
View(summary_ward)
neighborhoods = unique(shape$ward)
wards = unique(shape$ward)
##see what variables are missing from shape file
shape %>%group_by(ward) %>% count()%>%
left_join(summary_ward %>%group_by(ward) %>% count(), by = "ward") %>% arrange(-desc(n.y))
##add missing neighborhoods to data
summary_ward = as.data.table(summary_ward)
setkey(summary_ward, ward)
##add missing neighborhoods to data
summary_ward = as.data.table(summary_ward)
setkey(summary_ward, ward)
summary_ward = summary_ward[CJ(ward)]
View(summary_ward)
summary_ward[is.na(summary_ward)] = 0
##join
merged = summary_ward  %>% left_join(shape, by = "ward")
###regular map
wardmap = ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = ward, fill = count), color="white", alpha = .7) +
scale_fill_gradientn(name = "% of respondents", colors = c("grey", "steelblue1", "steelblue", "steelblue4")) +
coord_fixed() + theme_void() +
labs(
title = " ",
subtitle = " ",
caption = " "
) +
theme(text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 15, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.subtitle = element_text(size= 12, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.caption = element_text( size=7, color = "#4e4d47", margin = margin(b = 0.3, r=-99, unit = "cm") )) +
labs(
title = "Survey Responses",
subtitle = "Share by Ward",
caption = "Data: People's Budget Chicago | peoplesbudgetchicago.com"
)
###Save as Image
ggsave("wardmap.png")
###regular map
wardmap = ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = ward, fill = count), color="white", alpha = .7) +
scale_fill_gradientn(name = "% of respondents", colors = c("grey", "steelblue1", "steelblue", "steelblue4")) +
coord_fixed() + theme_void() +
labs(
title = " ",
subtitle = " ",
caption = " "
) +
theme(text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
plot.title = element_text(size= 15, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.subtitle = element_text(size= 12, hjust=0.01, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
plot.caption = element_text( size=7, color = "#4e4d47", margin = margin(b = 0.3, r=-99, unit = "cm") )) +
labs(
title = "Survey Responses",
subtitle = "Share by Ward",
caption = "Data: People's Budget Chicago | peoplesbudgetchicago.com"
)
ward_map
wardmap
legend.background = element_rect(fill = "#f5f5f2", color = NA),
###regular map
wardmap = ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = ward, fill = count), color="white", alpha = .7) +
scale_fill_gradientn(name = "% of respondents", colors = c("grey", "steelblue1", "steelblue", "steelblue4")) +
coord_fixed() + theme_void() +
labs(
title = " ",
subtitle = " ",
caption = " "
) +
theme(text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA))
###regular map
wardmap = ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = ward, fill = count), color="white", alpha = .7) +
scale_fill_gradientn(name = "% of respondents", colors = c("grey", "steelblue1", "steelblue", "steelblue4")) +
coord_fixed() + theme_void() +
labs(
title = " ",
subtitle = " ",
caption = " "
) +
theme(text = element_text(color = "#22211d"),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA)) +
labs(
title = "Survey Responses",
subtitle = "Share by Ward",
caption = "Data: People's Budget Chicago | peoplesbudgetchicago.com"
)
wardmap
###regular map
wardmap = ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = ward, fill = count), color="white", alpha = .7) +
scale_fill_gradientn(name = "Number of respondents", colors = c("grey", "steelblue1", "steelblue", "steelblue4")) +
coord_fixed() + theme_void() + theme_minimal() +
labs(
title = "Survey Responses",
subtitle = "Share by Ward",
caption = "Data: People's Budget Chicago | peoplesbudgetchicago.com"
)
wardmap
###regular map
wardmap = ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = ward, fill = count), color="black", alpha = .7) +
scale_fill_gradientn(name = "Number of respondents", colors = c("grey", "steelblue1", "steelblue", "steelblue4")) +
coord_fixed() + theme_void() + theme_minimal() +
labs(
title = "Survey Responses",
subtitle = "Share by Ward",
caption = "Data: People's Budget Chicago | peoplesbudgetchicago.com"
)
wardmap
###Save as Image
ggsave("wardmap.png")
library(formattable)
library(kableExtra)
library(tidyverse)
budget <- read.csv("online_budgetallocations.csv")
comm <- read.csv("Peoples_Budget_user_summary_COMMUNITY_AREA.csv")
geo <- read.csv("summary_geo.csv")
ward <- read.csv("Peoples_Budget_user_summary_WARD.csv")
race <- read.csv("Peoples_Budget_user_summary_RACE.csv")
setwd("~/GitHub/Peoples Budget Viz/peoples-budget-viz")
budget <- read.csv("online_budgetallocations.csv")
comm <- read.csv("Peoples_Budget_user_summary_COMMUNITY_AREA.csv")
geo <- read.csv("summary_geo.csv")
ward <- read.csv("Peoples_Budget_user_summary_WARD.csv")
race <- read.csv("Peoples_Budget_user_summary_RACE.csv")
race <- read.csv("Peoples_Budget_user_summary_RACE.csv")
kbl(budget) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
save_kable("budget.pdf")
kbl(budget) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
save_kable("inst/budget.pdf")
kbl(budget) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
save_kable("budget.pdf")
webshot::install_phantomjs()
kbl(budget) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
save_kable("budget.pdf")
View(budget)
install("magick")
install.packages("magick")
colnames(budget) = c("Total", "Carceral", "Community", "Education", "Health", "Housing", "Infrastructure")
library(magick)
kbl(budget) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
save_kable("budget.pdf")
colnames(budget) = c("Total", "Carceral", "Community", "Education", "Health", "Housing", "Infrastructure")
kbl(budget) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
save_kable("budget.pdf")
comm = comm %>% mutate(commarea_prop = commarea_prop*100)
View(comm)
comm = comm %>% mutate(proportion = proportion*100)
colnames(comm) = c("Community Area", "Count", "% of Respondents")
colnames(comm) = c("Community Area", "Count", "% of Respondents")
kbl(comm) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
save_kable("comm_responses.pdf")
ward = ward %>% mutate(proportion = proportion*100)
colnames(ward) = c("Ward", "Count", "% of Respondents")
kbl(ward) %>%
kable_styling(bootstrap_options = c("striped", "hover"))  %>%
save_kable("ward_responses.pdf")
geo = geo %>% mutate(proportion = proportion*100)
colnames(geo) = c("Geographic Side", "Count", "% of Respondents")
kbl(geo) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
save_kable("geo_responses.pdf")
kbl(race) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
save_kable("race_responses.pdf")
race = race %>% mutate(proportion = proportion*100)
colnames(race) = c("Race", "Count", "% of Respondents")
kbl(race) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
save_kable("race_responses.pdf")
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
library(RColorBrewer)
library(tidyverse)
pairwise = read.csv('wikisurvey_results.csv')
head(pairwise)
##create rank by theme
pairwise =
pairwise %>% group_by(Theme) %>%
mutate(group_rank = order(AOI_web_score, decreasing=TRUE))
pairwise = pairwise[
with(pairwise, order(Theme, group_rank, Ranking)),
]
##create a table for english
pairwise_eng = subset(pairwise, select = c(Theme,Idea_Text, Ranking, group_rank, AOI_web_score, total_matches))
##create a table for spanish
pairwise_spanish = subset(pairwise, select = c(Theme,Idea_ES, Ranking, group_rank, AOI_web_score, total_matches))
colnames(pairwise_spanish) = c("Theme", "Idea", "Rank", "Group_Rank", "Score", "Total Matches")
kbl(pairwise_spanish) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
save_kable("pairwise_spanish.pdf")
colnames(pairwise_eng) = c("Theme", "Idea", "Rank", "Group_Rank", "Score", "Total Matches")
kbl(pairwise_spanish) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
save_kable("pairwise_spanish.pdf")
ggsave("pairwise.png")
kbl(pairwise_eng) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
save_kable("pairwise_eng.pdf")
pairwise_eng %>%
ggplot() +
geom_hline(aes(yintercept=median(Score)), line = "dashed", color= "maroon4") +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
ggsave("pairwise.png")
remove(list=ls())
library(tm)
library(wordcloud2)
library(wordcloud)
library(RColorBrewer)
library(webshot)
whiteboard <- read.csv("whiteboard.csv")
text <- whiteboard$transcription
docs <- Corpus(VectorSource(text))
docs <- docs %>%
tm_map(removeNumbers) %>%
tm_map(removePunctuation)# %>%
##make all the words lower case
toSpace <- content_transformer(function(x, pattern) {return (gsub(pattern," ",
x))})
# Apply it for substituting the regular expression given in one of the former answers by " "
docs<- tm_map(docs,toSpace,"[^[:graph:]]")
docs <- tm_map(docs, content_transformer(tolower))
#remove stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
##Determine frequency
dtm <- TermDocumentMatrix(docs)
matrix <- as.matrix(dtm)
words <- sort(rowSums(matrix),decreasing=TRUE)
wordcloud <- data.frame(word = names(words),freq=words)
whiteboard_two <- read.delim("whiteboard.txt")
docs <- Corpus(VectorSource(whiteboard_two))
docs <- docs %>%
tm_map(removeNumbers) %>%
tm_map(removePunctuation)# %>%
##make all the words lower case
toSpace <- content_transformer(function(x, pattern) {return (gsub(pattern," ",
x))})
# Apply it for substituting the regular expression given in one of the former answers by " "
docs<- tm_map(docs,toSpace,"[^[:graph:]]")
docs <- tm_map(docs, content_transformer(tolower))
#remove stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
##Determine frequency
dtm <- TermDocumentMatrix(docs)
matrix <- as.matrix(dtm)
words <- sort(rowSums(matrix),decreasing=TRUE)
wordcloud <- data.frame(word = names(words),freq=words)
set.seed(1234) # for reproducibility
png("wordcloud_packages.png", width=1280,height=800)
wordcloud(words = wordcloud$word, freq = wordcloud$freq, min.freq = 1, max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(7, "Set1"))
##most frequent words
barplot(wordcloud[1:10,]$freq, las = 2, names.arg = wordcloud[1:10,]$word,
col = "maroon4", main ="Most frequent words",
ylab = "Word frequencies")
dev.off()
View(wordcloud)
##most frequent words
worldcloud %>%
filter(freq >= 7) %>%
ggplot() %>%
geom_bar(aes(x=word, y = freq))
##most frequent words
wordcloud %>%
filter(freq >= 7) %>%
ggplot() %>%
geom_bar(aes(x=word, y = freq))
##most frequent words
wordcloud %>%
filter(wordcloud$freq >= 7) %>%
ggplot() %>%
geom_bar(aes(x=word, y = freq))
library(ggplot2)
##most frequent words
wordcloud %>%
filter(wordcloud$freq >= 7) %>%
ggplot() %>%
geom_bar(aes(x=word, y = freq))
##most frequent words
wordcloud = as.data.frame(wordcloud)
wordcloud %>%
filter(wordcloud$freq >= 7) %>%
ggplot() %>%
geom_bar(aes(x=word, y = freq))
wordcloud %>%
filter(wordcloud$freq >= 7) %>%
ggplot() %>%
geom_bar(aes(x=word, y = freq))
wordcloud %>%
filter(freq >= 7) %>%
ggplot() %>%
geom_bar(aes(x=word, y = freq))
wordcloud = wordcloud %>%
filter(wordcloud$freq >= 7)
whiteboard <- read.csv("whiteboard.csv")
text <- whiteboard$transcription
docs <- Corpus(VectorSource(text))
docs <- docs %>%
tm_map(removeNumbers) %>%
tm_map(removePunctuation)# %>%
##make all the words lower case
toSpace <- content_transformer(function(x, pattern) {return (gsub(pattern," ",
x))})
# Apply it for substituting the regular expression given in one of the former answers by " "
docs<- tm_map(docs,toSpace,"[^[:graph:]]")
docs <- tm_map(docs, content_transformer(tolower))
#remove stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
##Determine frequency
dtm <- TermDocumentMatrix(docs)
matrix <- as.matrix(dtm)
words <- sort(rowSums(matrix),decreasing=TRUE)
wordcloud <- data.frame(word = names(words),freq=words)
##Generate the word cloud
set.seed(1234) # for reproducibility
wordcloud(words = wordcloud$word, freq = wordcloud$freq, min.freq = 1, max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(7, "Set1"))
##Save it
ggsave("whiteboardraw.png")
View(wordcloud)
wordcloud_filter = wordcloud %>%
filter(freq >= 7)
