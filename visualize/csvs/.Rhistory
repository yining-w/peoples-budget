geom_point(aes(y = Score, x=Rank)) +
facet_wrap(~Theme) +
theme_minimal() +
scale_fill_viridis() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
pairwise_eng %>%
ggplot() +
geom_hline(aes(yintercept=median(Score)), line = "dashed", color= "maroon4") +
geom_point(aes(y = Score, x=Rank)) +
facet_wrap(~Theme) +
theme_minimal() +
scale_fill_viridis(option="magma") +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
pairwise_eng %>%
ggplot() +
geom_hline(aes(yintercept=median(Score)), line = "dashed") +
geom_point(aes(y = Score, x=Rank)) +
facet_wrap(~Theme) +
theme_minimal() +
scale_fill_viridis(option="magma") +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
pairwise_eng %>%
ggplot(aes(y = Score, x=Rank)) +
scale_fill_viridis(option="magma") +
geom_hline(aes(yintercept=median(Score)), line = "dashed") +
geom_point() +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
pairwise_eng %>%
ggplot(aes(y = Score, x=Rank)) +
scale_fill_viridis(discrete = TRUE, option="magma") +
geom_hline(aes(yintercept=median(Score)), line = "dashed") +
geom_point() +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
pairwise_eng %>%
ggplot(aes(y = Score, x=Rank)) +
scale_fill_viridis(discrete = TRUE, option="magma") +
geom_hline(aes(yintercept=median(Score)), line = "dashed") +
geom_point(colour=factor(idea)) +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
pairwise_eng %>%
ggplot(aes(y = Score, x=Rank)) +
scale_fill_viridis(discrete = TRUE, option="magma") +
geom_hline(aes(yintercept=median(Score)), line = "dashed") +
geom_point(colour=factor(Idea)) +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
pairwise_eng %>%
ggplot(aes(y = Score, x=Rank)) +
scale_fill_viridis(discrete = TRUE, option="magma") +
geom_hline(aes(yintercept=median(Score)), line = "dashed") +
geom_point(colour=factor(Rank)) +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
View(pairwise_eng)
pairwise_eng %>%
ggplot(aes(y = Score, x=Rank)) +
scale_fill_viridis(discrete = TRUE, option="magma") +
geom_hline(aes(yintercept=median(Score)), line = "dashed") +
geom_point(colour=Rank) +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
View(pairwise_eng)
pairwise_eng %>%
ggplot(aes(y = Score, x=Rank)) +
scale_fill_viridis(discrete = TRUE, option="magma") +
geom_hline(aes(yintercept=median(Score)), line = "dashed") +
geom_point(aes(colour=Rank)) +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
pairwise_eng %>%
ggplot(aes(y = Score, x=Rank)) +
scale_fill_viridis(discrete = TRUE, option="magma") +
geom_hline(aes(yintercept=median(Score)), line = "dashed") +
geom_point(aes(colour=factor(Rank))) +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
The further right the dot the higher its rank. The horizontal line indicates the median score.",
The further right the dot the higher its rank. The horizontal line indicates the median score.",
pairwise_eng %>%
ggplot(aes(y = Score, x=Rank)) +
scale_fill_viridis(discrete = TRUE, option="magma") +
geom_hline(aes(yintercept=median(Score)), line = "dashed") +
geom_point(aes(colour=factor(Rank))) +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score") + theme(legend.key ="")
The further right the dot the higher its rank. The horizontal line indicates the median score.",
The further right the dot the higher its rank. The horizontal line indicates the median score.",
pairwise_eng %>%
ggplot(aes(y = Score, x=Rank)) +
scale_fill_viridis(discrete = TRUE, option="magma") +
geom_hline(aes(yintercept=median(Score)), line = "dashed") +
geom_point(aes(colour=factor(Rank))) +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score") +
theme(legend.position = "none") .
pairwise_eng %>%
ggplot(aes(y = Score, x=Rank)) +
scale_fill_viridis(discrete = TRUE, option="magma") +
geom_hline(aes(yintercept=median(Score)), line = "dashed") +
geom_point(aes(colour=factor(Rank))) +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score") +
theme(legend.position = "none")
pairwise_eng %>%
ggplot(aes(y = Score, x=Rank)) +
geom_hline(aes(yintercept=median(Score)), line = "dashed") +
geom_point(aes(colour=factor(Rank))) +
scale_fill_viridis(discrete = TRUE, option="magma")
pairwise_eng %>%
ggplot(aes(y = Score, x=Rank)) +
geom_hline(aes(yintercept=median(Score)), line = "dashed") +
geom_point(aes(colour=factor(Rank))) +
scale_fill_viridis(discrete = TRUE, option="magma") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score") +
theme(legend.position = "none")
ggsave("~/GitHub/Peoples Budget Viz/peoples-budget-viz/visualize/output/pairwise.png")
summary_ward = read.csv("Peoples_Budget_user_summary_WARD.csv")
summary_ward = read.csv("~/GitHub/Peoples Budget Viz/peoples-budget-viz/visualize/csvs/Peoples_Budget_user_summary_WARD.csv")
shape <- readOGR(dsn = ".", layer = "wards")
library(viridis)
library(ggplot2)
library(tidyverse)
library(ggmap)
#library(sf)
library(plotly)
library(data.table)
library(rgdal)
library(viridis)
rm(list=ls())
summary_ward = read.csv("~/GitHub/Peoples Budget Viz/peoples-budget-viz/visualize/csvs/Peoples_Budget_user_summary_WARD.csv")
shape <- readOGR(dsn = ".", layer = "wards")
#zip_shape <- st_read("zipcodes.shp")
summary_ward = read.csv("~/GitHub/Peoples Budget Viz/peoples-budget-viz/visualize/csvs/Peoples_Budget_user_summary_WARD.csv")
shape <- readOGR(dsn = ".", layer = "wards")
setwd("~/GitHub/Peoples Budget Viz/peoples-budget-viz/visualize/scripts")
setwd("~/GitHub/Peoples Budget Viz/peoples-budget-viz/visualize/csvs")
shape <- readOGR(dsn = ".", layer = "wards")
readOGR(dsn=path.expand("~/GitHub/Peoples Budget Viz/peoples-budget-viz/visualize/csvs"), layer="wards")
shape <- readOGR(dsn=path.expand("~/GitHub/Peoples Budget Viz/peoples-budget-viz/visualize/csvs"), layer="wards")
shape = fortify(shape, region = "ward")
names(shape)[names(shape) == "id"] <- "ward"
summary_ward$ward = tolower(summary_ward$Ward)
wards = unique(shape$ward)
##see what variables are missing from shape file
shape %>%group_by(ward) %>% count()%>%
left_join(summary_ward %>%group_by(ward) %>% count(), by = "ward") %>% arrange(-desc(n.y))
##add missing wards to data
summary_ward = as.data.table(summary_ward)
setkey(summary_ward, ward)
summary_ward = summary_ward[CJ(ward)]
summary_ward[is.na(summary_ward)] = 0
##join
merged = summary_ward  %>% left_join(shape, by = "ward")
###regular map
wardmap = ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = ward, fill = count), color="black", alpha = .7) +
scale_fill_gradientn(name = "Number of respondents", colors = c("grey", "steelblue1", "steelblue", "steelblue4")) +
coord_fixed() + theme_void() + theme_minimal() +
labs(
title = "Survey Responses",
subtitle = "Share by Ward",
caption = "Data: People's Budget Chicago | peoplesbudgetchicago.com"
)
wardmap
###regular map
wardmap = ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = ward, fill = count), color="black", alpha = .7) +
scale_fill_gradientn(name = "Number of respondents", colors = c("grey", "steelblue1", "steelblue", "steelblue4")) + theme_void() + theme_minimal() +
labs(title = "Survey Responses",
subtitle = "Share by Ward",
caption = "Data: People's Budget Chicago | peoplesbudgetchicago.com"
)
wardmap
###regular map
wardmap = ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = ward, fill = count), color="black", alpha = .7) +
scale_fill_gradientn(name = "Number of respondents", colors = c("grey", "steelblue1", "steelblue", "steelblue4")) +
coord_fixed() +
theme_void() +
theme_minimal() +
labs(title = "Survey Responses",
subtitle = "Share by Ward",
caption = "Data: People's Budget Chicago | peoplesbudgetchicago.com"
)
wardmap
###regular map
wardmap = ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = ward, fill = count), color="black", alpha = .7) +
scale_fill_gradientn(name = "Number of respondents", colors = c("viridis")) +
coord_fixed() +
theme_void() +
theme_minimal() +
labs(title = "Survey Responses",
subtitle = "Share by Ward",
caption = "Data: People's Budget Chicago | peoplesbudgetchicago.com"
)
wardmap
###regular map
wardmap = ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = ward, fill = count), color="black", alpha = .7) +
scale_fill_gradientn(name = "Number of respondents") +
coord_fixed() +
theme_void() +
theme_minimal() +
labs(title = "Survey Responses",
subtitle = "Share by Ward",
caption = "Data: People's Budget Chicago | peoplesbudgetchicago.com"
)
wardmap
###regular map
wardmap = ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = ward, fill = count), color="black", alpha = .7) +
scale_fill_gradientn(name = "Number of respondents") +
coord_fixed() +
theme_void() +
theme_minimal() +
labs(title = "Survey Responses",
subtitle = "Share by Ward",
caption = "Data: People's Budget Chicago | peoplesbudgetchicago.com"
)
###regular map
wardmap = ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = ward, fill = count), color="black", alpha = .7) +
scale_fill_viridis(discrete=TRUE) +
coord_fixed() +
theme_void() +
theme_minimal() +
labs(title = "Survey Responses",
subtitle = "Share by Ward",
caption = "Data: People's Budget Chicago | peoplesbudgetchicago.com"
)
wardmap
###regular map
wardmap = ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = ward, colour = factor(count)), color="black", alpha = .7) +
scale_fill_viridis(discrete=TRUE) +
coord_fixed() +
theme_void() +
theme_minimal() +
labs(title = "Survey Responses",
subtitle = "Share by Ward",
caption = "Data: People's Budget Chicago | peoplesbudgetchicago.com"
)
wardmap
###regular map
wardmap = ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = ward, colour = factor(count)), color="black", alpha = .7) +
scale_fill_viridis(discrete=TRUE, option = "magma") +
coord_fixed() +
theme_void() +
theme_minimal() +
labs(title = "Survey Responses",
subtitle = "Share by Ward",
caption = "Data: People's Budget Chicago | peoplesbudgetchicago.com"
)
wardmap
###regular map
wardmap = ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = ward, colour = factor(count)), alpha = .7) +
scale_fill_viridis(discrete=TRUE, option = "magma") +
coord_fixed() +
theme_void() +
theme_minimal() +
labs(title = "Survey Responses",
subtitle = "Share by Ward",
caption = "Data: People's Budget Chicago | peoplesbudgetchicago.com"
)
wardmap
###regular map
wardmap = ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = ward, fill = count), color="black", alpha = .7) +
scale_fill_gradientn(name = "Number of respondents", colors = c("grey", "steelblue1", "steelblue", "steelblue4")) +
coord_fixed() +
theme_void() +
theme_minimal() +
labs(title = "Survey Responses",
subtitle = "Share by Ward",
caption = "Data: People's Budget Chicago | peoplesbudgetchicago.com"
)
wardmap
###regular map
wardmap = ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = ward, fill = count), color="black", alpha = .7) +
# scale_fill_gradientn(name = "Number of respondents", colors = c("grey", "steelblue1", "steelblue", #"steelblue4")) +
scale_fill_viridis() +
coord_fixed() +
theme_void() +
theme_minimal() +
labs(title = "Survey Responses",
subtitle = "Share by Ward",
caption = "Data: People's Budget Chicago | peoplesbudgetchicago.com"
) +
geom_polygon(aes(fill = rate), colour = alpha("white", 1 / 2), size = 0.2) +
geom_polygon(data = state_df, colour = "white", fill = NA) +
wardmap
###regular map
wardmap = ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = ward, fill = count), color="black", alpha = .7) +
# scale_fill_gradientn(name = "Number of respondents", colors = c("grey", "steelblue1", "steelblue", #"steelblue4")) +
scale_fill_viridis() +
coord_fixed() +
theme_void() +
theme_minimal() +
labs(title = "Survey Responses",
subtitle = "Share by Ward",
caption = "Data: People's Budget Chicago | peoplesbudgetchicago.com"
)
geom_polygon(aes(fill = rate), colour = alpha("white", 1 / 2), size = 0.2) +
geom_polygon(data = state_df, colour = "white", fill = NA) +
wardmap
wardmap
###regular map
wardmap = ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = ward, fill = count), color="black", alpha = .7) +
# scale_fill_gradientn(name = "Number of respondents", colors = c("grey", "steelblue1", "steelblue", #"steelblue4")) +
scale_fill_viridis(option="magma") +
coord_fixed() +
theme_void() +
theme_minimal() +
labs(title = "Survey Responses",
subtitle = "Share by Ward",
caption = "Data: People's Budget Chicago | peoplesbudgetchicago.com"
)
wardmap
###Save as Image
ggsave("~/GitHub/Peoples Budget Viz/peoples-budget-viz/visualize/output/wardmap.png")
shape <- readOGR(dsn=path.expand("~/GitHub/Peoples Budget Viz/peoples-budget-viz/visualize/csvs"), layer="commarea")
shape = fortify(shape, region = "community")
names(shape)[names(shape) == "id"] <- "commarea_name"
shape$commarea_name = tolower(shape$commarea_name)
summary_comm = read.csv("Peoples_Budget_user_summary_COMMUNITY_AREA.csv")
summary_comm = read.csv("~/GitHub/Peoples Budget Viz/peoples-budget-viz/visualize/csvs/Peoples_Budget_user_summary_COMMUNITY_AREA.csv")
shape = fortify(shape, region = "community")
names(shape)[names(shape) == "id"] <- "commarea_name"
shape$commarea_name = tolower(shape$commarea_name)
summary_comm$CHI_COMM_AREA_NAME = tolower(summary_comm$CHI_COMM_AREA_NAME)
names(summary_comm)[names(summary_comm) == "CHI_COMM_AREA_NAME"] <- "commarea_name"
neighborhoods = unique(shape$commarea_name)
##see what variables are missing from shape file
shape %>%group_by(commarea_name) %>% count()%>%
left_join(summary_comm %>%group_by(commarea_name) %>% count(), by = "commarea_name") %>% arrange(-desc(n.y))
##add missing neighborhoods to data
summary_comm = as.data.table(summary_comm)
setkey(summary_comm, commarea_name)
summary_comm = summary_comm[CJ(neighborhoods)]
summary_comm[is.na(summary_comm)] = 0
#merge map info with peoples budget info
merged = summary_comm  %>% left_join(shape, by = "commarea_name")
ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = commarea_name, fill = count), color="black") +
scale_fill_gradientn(colors = c("grey", "palevioletred2", "maroon3", "maroon4")) +
coord_fixed() + theme_minimal() + theme_void() +
labs(
title = "Who filled out the People's Budget?",
subtitle = "Web Responses By Community Area",
caption = "People's Budget Chicago | peoplesbudgetchicago.com") +
theme(text = element_text(color = "#22211d"))
ggsave("commmap.png")
#    plot.background = element_rect(fill = "#f5f5f2", color = NA),
#    panel.background = element_rect(fill = "#f5f5f2", color = NA),
#  legend.background = element_rect(fill = "#f5f5f2", color = NA))
ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = commarea_name, fill = count), color="black") +
scale_fill_viridis(option="magma") +
coord_fixed() + theme_minimal() + theme_void() +
labs(
title = "Who filled out the People's Budget?",
subtitle = "Web Responses By Community Area",
caption = "People's Budget Chicago | peoplesbudgetchicago.com") +
theme(text = element_text(color = "#22211d"))
ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = commarea_name, fill = count), color="black") +
scale_fill_viridis(option="viridis") +
coord_fixed() + theme_minimal() + theme_void() +
labs(
title = "Who filled out the People's Budget?",
subtitle = "Web Responses By Community Area",
caption = "People's Budget Chicago | peoplesbudgetchicago.com") +
theme(text = element_text(color = "#22211d"))
###regular map
wardmap = ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = ward, fill = count), color="black", alpha = .7) +
# scale_fill_gradientn(name = "Number of respondents", colors = c("grey", "steelblue1", "steelblue", #"steelblue4")) +
scale_fill_viridis(option="viridis") +
coord_fixed() +
theme_void() +
theme_minimal() +
labs(title = "Survey Responses",
subtitle = "Share by Ward",
caption = "Data: People's Budget Chicago | peoplesbudgetchicago.com"
)
wardmap
wardmap
ggsave("~/GitHub/Peoples Budget Viz/peoples-budget-viz/visualize/output/commmap.png")
shape = fortify(shape, region = "community")
names(shape)[names(shape) == "id"] <- "commarea_name"
shape$commarea_name = tolower(shape$commarea_name)
summary_comm$CHI_COMM_AREA_NAME = tolower(summary_comm$CHI_COMM_AREA_NAME)
names(summary_comm)[names(summary_comm) == "CHI_COMM_AREA_NAME"] <- "commarea_name"
neighborhoods = unique(shape$commarea_name)
##see what variables are missing from shape file
shape %>%group_by(commarea_name) %>% count()%>%
left_join(summary_comm %>%group_by(commarea_name) %>% count(), by = "commarea_name") %>% arrange(-desc(n.y))
summary_comm = read.csv("~/GitHub/Peoples Budget Viz/peoples-budget-viz/visualize/csvs/Peoples_Budget_user_summary_COMMUNITY_AREA.csv")
shape <- readOGR(dsn=path.expand("~/GitHub/Peoples Budget Viz/peoples-budget-viz/visualize/csvs"), layer="commarea")
#zip_shape <- st_read("zipcodes.shp")
shape = fortify(shape, region = "community")
names(shape)[names(shape) == "id"] <- "commarea_name"
shape$commarea_name = tolower(shape$commarea_name)
summary_comm$CHI_COMM_AREA_NAME = tolower(summary_comm$CHI_COMM_AREA_NAME)
names(summary_comm)[names(summary_comm) == "CHI_COMM_AREA_NAME"] <- "commarea_name"
neighborhoods = unique(shape$commarea_name)
##see what variables are missing from shape file
shape %>%group_by(commarea_name) %>% count()%>%
left_join(summary_comm %>%group_by(commarea_name) %>% count(), by = "commarea_name") %>% arrange(-desc(n.y))
##add missing neighborhoods to data
summary_comm = as.data.table(summary_comm)
setkey(summary_comm, commarea_name)
summary_comm = summary_comm[CJ(neighborhoods)]
summary_comm[is.na(summary_comm)] = 0
#merge map info with peoples budget info
merged = summary_comm  %>% left_join(shape, by = "commarea_name")
ggplot() +
geom_polygon(data = merged, aes(x=long, y = lat, group = commarea_name, fill = count), color="black") +
scale_fill_viridis(option="viridis") +
coord_fixed() + theme_minimal() + theme_void() +
labs(
title = "Who filled out the People's Budget?",
subtitle = "Web Responses By Community Area",
caption = "People's Budget Chicago | peoplesbudgetchicago.com") +
theme(text = element_text(color = "#22211d"))
ggsave("~/GitHub/Peoples Budget Viz/peoples-budget-viz/visualize/output/commmap.png")
#    plot.background = element_rect(fill = "#f5f5f2", color = NA),
#    panel.background = element_rect(fill = "#f5f5f2", color = NA),
#  legend.background = element_rect(fill = "#f5f5f2", color = NA))
ggsave("~/GitHub/Peoples Budget Viz/peoples-budget-viz/visualize/output/commmap.png")
